- name: generate domain key
  command: openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 -out /etc/ssl/private/{{ domain }}.key creates=/etc/ssl/private/{{ domain }}.key

- name: generate csr
  openssl_csr:
    path: "/etc/ssl/letsencrypt/{{ domain }}.csr"
    privatekey_path: "/etc/ssl/private/{{ domain }}.key"
    countryName: "{{ country }}"
    organizationName: "{{ organization }}"
    emailAddress: "{{ email }}"
    commonName: "{{ domain }}"
    subjectAltName: "DNS:www.{{ domain }}"



- name: letsencrypt firts steps
  letsencrypt:
    account_key: /etc/ssl/letsencrypt/account.key
    csr: /etc/ssl/letsencrypt/{{ domain }}.csr
    dest: /etc/ssl/certs/{{ domain }}.crt
    acme_directory: "{{ acme_directory }}"
    remaining_days: "{{ cert_days }}"
  register: domain_challenge

- name: perform the necessary steps to fulfill the challenge
  copy:
    dest: "/var/www/html/{{ item['value']['http-01']['resource'] }}"
    content: "{{ item['value']['http-01']['resource_value'] }}"
  when: domain_challenge|changed
  with_dict: "{{ domain_challenge['challenge_data'] }}"

- name: letsencrypt second steps
  letsencrypt:
    account_key: /etc/ssl/letsencrypt/account.key
    csr: /etc/ssl/letsencrypt/{{ domain }}.csr
    dest: /etc/ssl/certs/{{ domain }}.crt
    acme_directory: "{{ acme_directory }}"
    remaining_days: "{{ cert_days }}"
    data: "{{ domain_challenge }}"
